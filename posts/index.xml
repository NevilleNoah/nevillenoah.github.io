<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - Neville Noah | Blog</title>
        <link>https://nevillenoah.github.io/posts/</link>
        <description>所有文章 | Neville Noah | Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 14 Aug 2020 14:33:58 &#43;0800</lastBuildDate><atom:link href="https://nevillenoah.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>行为型：解释器模式</title>
    <link>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Fri, 14 Aug 2020 14:33:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 解释器模式，通过解释器对内容进行解释。 解释器模式034aa5120a20e4969f6be05a3e9ab3fe " 解释器模式 表达式Exp]]></description>
</item><item>
    <title>行为型：命令模式</title>
    <link>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Fri, 14 Aug 2020 12:11:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 命令模式，将请求封装为命令类，传给调用类，调用类寻找合适的对象执行命令。 命令模式540f04195f757b23e8f2cb4d54e2]]></description>
</item><item>
    <title>行为型：责任链模式</title>
    <link>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Fri, 14 Aug 2020 11:26:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 责任链模式，如果你无法完成这项任务，就交给下一位，直到找到能负责这项任务的人。 责任链模式c87aba7e6e835ff055787e94]]></description>
</item><item>
    <title>结构型：享元模式</title>
    <link>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Thu, 13 Aug 2020 21:21:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 享元模式，“元”即某个属性，“享元”即共享属性。如果计划创建的对象有某个属性值与已存在的实例相同的话，则共享这个属性，即直接用这个实例而]]></description>
</item><item>
    <title>结构型：外观模式</title>
    <link>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Thu, 13 Aug 2020 20:20:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 外观模式，隐藏内部逻辑的复杂性，仅提供接口供客户端访问，这些接口就是“外观”。 外观模式ce53a2151e332a8cb18993a7d]]></description>
</item><item>
    <title>结构型：装饰器模式</title>
    <link>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Thu, 13 Aug 2020 16:47:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 装饰器模式，在原来的基础上再加一点点。 装饰器模式eff1373ae046481f906c08ce236e9afd " 装饰器模式 圆Circl]]></description>
</item><item>
    <title>结构型：代理模式</title>
    <link>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Thu, 13 Aug 2020 16:21:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 代理模式，自己完不成的事交由另一位能完成的代理人去完成。 代理模式c19c222aa00e32333e041890b84f031e " 代理模]]></description>
</item><item>
    <title>结构型：组合模式</title>
    <link>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Thu, 13 Aug 2020 15:11:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 组合模式，将结构相近的对象写为单一对象，并将这个对象作为树的节点类型，然后依据树形结构来构造对象。 组合模式b5768dc89a2325f]]></description>
</item><item>
    <title>结构型：过滤器模式</title>
    <link>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E8%BF%87%E6%BB%A4%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Thu, 13 Aug 2020 14:52:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E8%BF%87%E6%BB%A4%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 过滤器模式，运用不同标准的过滤器筛选出数据。 过滤器模式769a4d5cf4761be7e9f6a751104aad43 " 过滤器模式 Mal]]></description>
</item><item>
    <title>结构型：桥接模式</title>
    <link>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Thu, 13 Aug 2020 14:27:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 桥接模式，在类的基础上，增加一个接口作为“桥”。接口的实现类和该类都可以独立变换而互不影响。 桥接模式41b8ab4c00e4fb477a]]></description>
</item></channel>
</rss>
