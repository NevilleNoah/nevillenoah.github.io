<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - Neville Noah | Blog</title>
        <link>https://nevillenoah.github.io/posts/</link>
        <description>所有文章 | Neville Noah | Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 15 Aug 2020 21:17:58 &#43;0800</lastBuildDate><atom:link href="https://nevillenoah.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>行为型：访问者模式</title>
    <link>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Sat, 15 Aug 2020 21:17:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 访问者模式，访问者可以改变访问目标类执行的算法。 访问者模式6e9e8a3abf669f2880278ac762e554b2 " 访问者模式 访]]></description>
</item><item>
    <title>行为型：模板模式</title>
    <link>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Sat, 15 Aug 2020 19:17:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 模板模式，模板为抽象类，子类继承模板，但是调用的时候调用的是模版的方法。 模板模式2feaf82eae3f221420c979fc54df]]></description>
</item><item>
    <title>行为型：策略模式</title>
    <link>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Sat, 15 Aug 2020 18:17:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 策略模式，制定多种策略，主体对象根据需要使用不同的策略。 策略模式4b054073d842cbcaa716881d8dfbd732 " 策略模]]></description>
</item><item>
    <title>行为型：空对象模式</title>
    <link>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E7%A9%BA%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Sat, 15 Aug 2020 17:17:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E7%A9%BA%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 空对象模式，用返回“空对象”而不是“判空”来应对“空”的情况。 空对象模式8c0402ce528d83f07ece90a9f83bcaad]]></description>
</item><item>
    <title>行为型：状态模式</title>
    <link>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Sat, 15 Aug 2020 11:17:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 状态模式，多个状态类，将状态类传入主体类，主体类会随着状态类不同而做不同的操作。 状态模式7a40cc3bb31985e4fb6b3ef5]]></description>
</item><item>
    <title>行为型：观察者模式</title>
    <link>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Sat, 15 Aug 2020 10:17:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 观察者模式，观察者随着被观察者的变动而变动。 观察者模式a4f9fe7da950a960a35a0789754562b5 " 观察者模式 主体类]]></description>
</item><item>
    <title>行为型：备忘录模式</title>
    <link>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Fri, 14 Aug 2020 18:01:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 备忘录模式，存储对象状态，在需要时恢复。 备忘录模式b8e7c788a3bdf575c160966ffb09674a " 备忘录模式 基础类Or]]></description>
</item><item>
    <title>行为型：中介者模式</title>
    <link>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Fri, 14 Aug 2020 17:01:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 中介者模式，在通信的两者间，增加一个中介类去处理通信问题，我们在通信时只需要维护中介类即可。 中介者模式e12e12f895f10e2d7]]></description>
</item><item>
    <title>行为型：迭代器模式</title>
    <link>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Fri, 14 Aug 2020 15:01:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 迭代器模式，迭代，即顺序访问对象集合。 迭代器模式5186f211a068baec8154b3b24b5f239c " 迭代器模式 迭代器容器C]]></description>
</item><item>
    <title>行为型：解释器模式</title>
    <link>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Fri, 14 Aug 2020 14:33:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[释义 解释器模式，通过解释器对内容进行解释。 解释器模式034aa5120a20e4969f6be05a3e9ab3fe " 解释器模式 表达式Exp]]></description>
</item></channel>
</rss>
