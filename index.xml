<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Neville Noah | Blog</title>
        <link>https://nevillenoah.github.io/</link>
        <description>关于 LoveIt 主题</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 10 Aug 2020 16:37:41 &#43;0800</lastBuildDate>
            <atom:link href="https://nevillenoah.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Jetpack：Paging分页库与网络加载</title>
    <link>https://nevillenoah.github.io/jetpackpaging%E5%88%86%E9%A1%B5%E5%BA%93%E4%B8%8E%E7%BD%91%E7%BB%9C%E5%8A%A0%E8%BD%BD/</link>
    <pubDate>Mon, 10 Aug 2020 16:37:41 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/jetpackpaging%E5%88%86%E9%A1%B5%E5%BA%93%E4%B8%8E%E7%BD%91%E7%BB%9C%E5%8A%A0%E8%BD%BD/</guid>
    <description><![CDATA[引言 Paging3的模型改了，主要特点是新增了中转器以实现网络数据的持久化存储。 Paging3模型 Paing数据加载的途径一：如果你希望数据]]></description>
</item><item>
    <title>Jetpack：Paging分页库</title>
    <link>https://nevillenoah.github.io/jetpackpaging%E5%88%86%E9%A1%B5%E5%BA%93/</link>
    <pubDate>Wed, 05 Aug 2020 21:46:41 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/jetpackpaging%E5%88%86%E9%A1%B5%E5%BA%93/</guid>
    <description><![CDATA[引言 也许你还在RecyclerView的下拉加载而烦恼，也许你还在为做分页缓存而头疼，所以，他来了——Paging分页库。 我将代码存到了gi]]></description>
</item><item>
    <title>Gradle：仓库</title>
    <link>https://nevillenoah.github.io/gradle%E4%BB%93%E5%BA%93/</link>
    <pubDate>Tue, 04 Aug 2020 16:33:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/gradle%E4%BB%93%E5%BA%93/</guid>
    <description><![CDATA[引言 你有没有很奇怪，我们的远程引入的依赖库为什么只需要写入源即可？难道还有不需要网络协议就能获取到的资源？怎么可能。那么协议写到了哪里？写到]]></description>
</item><item>
    <title>Gradle：依赖库</title>
    <link>https://nevillenoah.github.io/gradle%E4%BE%9D%E8%B5%96%E5%BA%93/</link>
    <pubDate>Tue, 04 Aug 2020 15:05:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/gradle%E4%BE%9D%E8%B5%96%E5%BA%93/</guid>
    <description><![CDATA[引言 很多同学写了Android很久，对于依赖库的引入却是傻傻分不清。因为Gradle随着版本的升级，语义在不断的变化，从compile到im]]></description>
</item><item>
    <title>Gradle：多模块下的版本管理</title>
    <link>https://nevillenoah.github.io/gradle%E5%A4%9A%E6%A8%A1%E5%9D%97%E4%B8%8B%E7%9A%84%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</link>
    <pubDate>Tue, 04 Aug 2020 11:32:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/gradle%E5%A4%9A%E6%A8%A1%E5%9D%97%E4%B8%8B%E7%9A%84%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</guid>
    <description><![CDATA[引言 如果我们的project中有许多module，那么每个module下就会有一个build.gradle用于管理该module的依赖库。多]]></description>
</item><item>
    <title>Jetpack：生命周期组件</title>
    <link>https://nevillenoah.github.io/jetpack%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%BB%84%E4%BB%B6/</link>
    <pubDate>Sat, 01 Aug 2020 14:28:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/jetpack%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%BB%84%E4%BB%B6/</guid>
    <description><![CDATA[场景问题 我们在Android开发中会遇到这样一种场景： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43]]></description>
</item><item>
    <title>Kotlin高级：协程</title>
    <link>https://nevillenoah.github.io/kotlin%E9%AB%98%E7%BA%A7%E5%8D%8F%E7%A8%8B/</link>
    <pubDate>Thu, 30 Jul 2020 09:47:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/kotlin%E9%AB%98%E7%BA%A7%E5%8D%8F%E7%A8%8B/</guid>
    <description><![CDATA[引言 Coroutine，一个线程框架，是建立在线程之上的API，用于让代码在各个线程之间反复横跳。 你只需要理解三个概念，就能理解协程： 调度器]]></description>
</item><item>
    <title>Android地阶：模块化开发（二）——Module</title>
    <link>https://nevillenoah.github.io/android%E5%9C%B0%E9%98%B6%E6%A8%A1%E5%9D%97%E5%8C%96%E5%BC%80%E5%8F%91%E4%BA%8Cmodule/</link>
    <pubDate>Mon, 27 Jul 2020 12:30:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/android%E5%9C%B0%E9%98%B6%E6%A8%A1%E5%9D%97%E5%8C%96%E5%BC%80%E5%8F%91%E4%BA%8Cmodule/</guid>
    <description><![CDATA[Module创建 使用Android Studio中的File&gt;New&gt;New Module创建Module Module类型 常用Mod]]></description>
</item><item>
    <title>Android地阶：模块化开发（一）——api与implementation</title>
    <link>https://nevillenoah.github.io/android%E5%9C%B0%E9%98%B6%E6%A8%A1%E5%9D%97%E5%8C%96%E5%BC%80%E5%8F%91%E4%B8%80api%E4%B8%8Eimplementation/</link>
    <pubDate>Sun, 26 Jul 2020 12:31:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/android%E5%9C%B0%E9%98%B6%E6%A8%A1%E5%9D%97%E5%8C%96%E5%BC%80%E5%8F%91%E4%B8%80api%E4%B8%8Eimplementation/</guid>
    <description><![CDATA[前言：模块化开发系列旨在为读者建立起模块化的基本轮廓。 引入依赖库常用的有两种方式： api implementation 两者的区别，存在于传递依赖方面。 implementation 该依赖方式所依赖的库]]></description>
</item><item>
    <title>Android玄阶：七个葫芦娃（二）——Context</title>
    <link>https://nevillenoah.github.io/android%E7%8E%84%E9%98%B6%E4%B8%83%E4%B8%AA%E8%91%AB%E8%8A%A6%E5%A8%83%E4%BA%8Ccontext/</link>
    <pubDate>Tue, 21 Jul 2020 21:13:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://nevillenoah.github.io/android%E7%8E%84%E9%98%B6%E4%B8%83%E4%B8%AA%E8%91%AB%E8%8A%A6%E5%A8%83%E4%BA%8Ccontext/</guid>
    <description><![CDATA[Context直译为“上下文”。Android四大组件中最核心的便是Activity，Activity最核心的便是Context，Activ]]></description>
</item></channel>
</rss>
